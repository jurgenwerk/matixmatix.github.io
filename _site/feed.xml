<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.0.3">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2018-12-30T12:06:16+01:00</updated><id>/</id><title>codeandtechno</title><subtitle>Matic Jurglič is a computer person who specializes in avant-garde internet applications.</subtitle><author><name>Matic Jurglič</name></author><entry><title>What is SaaS white labeling and how to do it?</title><link href="/posts/saas-whitelabeling/" rel="alternate" type="text/html" title="What is SaaS white labeling and how to do it?" /><published>2018-12-26T00:00:00+01:00</published><updated>2018-12-26T00:00:00+01:00</updated><id>/posts/saas-whitelabeling</id><content type="html" xml:base="/posts/saas-whitelabeling/">&lt;p&gt;Depending on your online business, white labeling can turn out to be a fantastic business model. This applies especially when your target customers are actually &lt;b&gt;customers who have their own customers&lt;/b&gt;, for example agencies, consultancies and client-oriented businesses.&lt;/p&gt;

&lt;p&gt;In this case there is a real chance that adding support for white labeling in your product will improve your chances of attracting advanced users and position your product higher in the eyes of corporate customers (i.e. those who can pay top dollar).&lt;/p&gt;

&lt;h3 id=&quot;but-what-exactly-is-white-labeling&quot;&gt;But what exactly is white labeling?&lt;/h3&gt;

&lt;p&gt;White labeling means taking a blank product and slapping a label for another company on it.&lt;/p&gt;

&lt;figure class=&quot;half&quot;&gt;
    &lt;a href=&quot;/images/whitelabel-post/whitelabeled-bottles.jpg&quot;&gt;&lt;img src=&quot;/images/whitelabel-post/whitelabeled-bottles.jpg&quot; /&gt;&lt;/a&gt;
    &lt;center&gt;
    &lt;figcaption&gt;&lt;/figcaption&gt;&lt;/center&gt;
&lt;/figure&gt;

&lt;p&gt;It means other companies can take your (online, in this case) product and brand it as their own.&lt;/p&gt;

&lt;h3 id=&quot;white-labeled-saas-example&quot;&gt;White labeled SaaS example&lt;/h3&gt;

&lt;p&gt;Let’s imagine you built a website performance tracker that makes reports of websites’ speed. On one hand, you have individual customers that use your service to track their own websites. On the other hand, there are many web performance consultancies and agencies who make a living tuning &lt;em&gt;other&lt;/em&gt; people’s (i.e. their customers’) websites. To deliver reports, they have 3 options:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Build their own website tracking solution. This is expensive to build, and expensive to maintain. Not all businesses are in a position to afford and maintain it.&lt;/li&gt;
  &lt;li&gt;Use a 3rd party solution (like yours). Their clients will notice they are relying on an external service, which may impair their trust.&lt;/li&gt;
  &lt;li&gt;Use a 3rd party solution (like yours), but brand it (white label) as their own. Their clients will think the reporting solution (which is actually yours, but branded differently) is an integral part of their service, which may make them look better in their clients’ eyes.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;white-labeling-settings-in-saas&quot;&gt;White labeling settings in SaaS&lt;/h3&gt;

&lt;p&gt;White labeling should be approached the same way as &lt;b&gt;internationalization&lt;/b&gt;. The principle is the same. Configurations can be saved in asset folders or in a database, and conditionally shown depending on the user and their settings.&lt;/p&gt;

&lt;p&gt;Here is an example of how we did these settings at &lt;a href=&quot;https://nightwatch.io&quot; target=&quot;_blank&quot;&gt;Nightwatch.io&lt;/a&gt;:&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;/images/whitelabel-post/whitelabel-settings-example.png&quot;&gt;&lt;img src=&quot;/images/whitelabel-post/whitelabel-settings-example.png&quot; /&gt;&lt;/a&gt;
    &lt;center&gt;
    &lt;figcaption&gt;&lt;/figcaption&gt;&lt;/center&gt;
&lt;/figure&gt;

&lt;h3 id=&quot;white-label-subdomain&quot;&gt;White label (sub)domain&lt;/h3&gt;

&lt;p&gt;This is the entry point to a white labeled SaaS product.&lt;/p&gt;

&lt;p&gt;Your customers who wish to offer your product branded as their own will want to customize its URL.&lt;/p&gt;

&lt;p&gt;The DNS part is easy, usually solved with a &lt;em&gt;CNAME&lt;/em&gt; record. Returning to our previous example, let’s suppose that your SaaS product URL is &lt;em&gt;WebPerformanceTracking.com&lt;/em&gt;. Let’s suppose that one of your customers, who runs their consultancy at WebPerfCompany.com wants to white label your service and make it accessible at &lt;em&gt;tracker.WebPerfCompany.com&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;What you can do is set up a &lt;em&gt;whitelabel.WebPerformanceTracking.com&lt;/em&gt;, point it to your server and instruct your customer to set up a CNAME record on their &lt;em&gt;tracker.webperfcompany.com&lt;/em&gt; subdomain. This will route the requests to their white labeled service back to your server.&lt;/p&gt;

&lt;h3 id=&quot;theres-a-problem-though&quot;&gt;There’s a problem though&lt;/h3&gt;

&lt;figure&gt;
    &lt;a href=&quot;/images/whitelabel-post/page-not-secure.png&quot;&gt;&lt;img src=&quot;/images/whitelabel-post/page-not-secure.png&quot; /&gt;&lt;/a&gt;
    &lt;center&gt;
    &lt;figcaption&gt;&lt;/figcaption&gt;&lt;/center&gt;
&lt;/figure&gt;

&lt;p&gt;The described connection to your customer’s white labeled service is unsecure (non-https). Since browsers are complaining about it more and more, and you don’t want to break clients’s trust, it only makes sense to secure it.&lt;/p&gt;

&lt;p&gt;To make secure connections from your customers’ white labeled domains to your server, you have two options.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Convince your customer to send you a cetificate for the white labeled domain and use it on your server. This is not really convenient nor desirable, because it’s a hard to maintain, hard to scale, needs a lot of support and it makes you a keeper of foreign certificate, which brings extra burderns.&lt;/li&gt;
  &lt;li&gt;Use or build a proxying service with a middleware or CDN that creates Let’s Encrypt certificates on the fly.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you want hassle free whitelabeling, then you want to go with option 2. Depending on your scale, you probably want to use a 3rd party solution for that.&lt;/p&gt;

&lt;p&gt;How this usually works is that your customer still has to create a CNAME record, but there is an additional step you have to make. You have to report the white labeled domain to your selected proxying service via their API so they could setup the certificate in the background and do the necessary routing.&lt;/p&gt;

&lt;p&gt;CloudFlare is probably the simplest service you can use to secure white labeled connections, but at the time of writing, it’s available only as a part of an &lt;a href=&quot;https://www.cloudflare.com/saas/&quot;&gt;expensive corporate plan&lt;/a&gt;. Alternatively, you can use CDN services, like &lt;a href=&quot;https://fly.io/&quot;&gt;Fly.io&lt;/a&gt; or &lt;a href=&quot;https://zeit.co&quot;&gt;Zeit&lt;/a&gt; to deploy a proxying app which responds to secure whitelabel connections and serves data from your origin server.&lt;/p&gt;

&lt;h3 id=&quot;final-step&quot;&gt;Final step&lt;/h3&gt;

&lt;p&gt;When you reached the stage where connections from white labeled domains are succesfully hitting your server, it’s time to write some application logic that matches a hostname against a white labeled account and decorates the requests with the info on which white labeled account it belongs to.&lt;/p&gt;

&lt;p&gt;When you have this information for every request, you can easily use it inside your application interface to show white labeled branding, e.g. custom design, logos, emails, texts and other customly branded pieces of the app.&lt;/p&gt;</content><category term="posts" /><summary>Depending on your online business, white labeling can turn out to be a fantastic business model. This applies especially when your target customers are actually customers who have their own customers, for example agencies, consultancies and client-oriented businesses.</summary></entry><entry><title>Partial, resource-related dumps in PostgreSQL</title><link href="/posts/partial-resource-dump-postgres/" rel="alternate" type="text/html" title="Partial, resource-related dumps in PostgreSQL" /><published>2018-03-29T00:00:00+02:00</published><updated>2018-03-29T00:00:00+02:00</updated><id>/posts/partial-resource-dump-postgres</id><content type="html" xml:base="/posts/partial-resource-dump-postgres/">&lt;p&gt;Sometimes we find ourselves in a need for copying and restoring a specific set of data belonging to a common parent resource. For example, we want to connect to the production server, pull down fresh data related only to the specified user and restore it to our development database to debug an issue or just develop new features. When your database is tiny, you could just restore the whole thing, but once it grows, the complete restoration is out of the question, especially when you need to do it often.&lt;/p&gt;

&lt;p&gt;Here’s a simplified bash script I wrote that downloads everything belonging to the application user from the production database, deletes stale user data from the local development database and replaces it with the fresh data.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/sh&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Usage: ./script/restore_user 100&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;USER_ID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;DATE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;date +%Y-%m-%d&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;SQL_FILENAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;data_user_&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;USER_ID&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;_&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;DATE&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;.sql

&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;-- Preparing a data dump file for the specified user...&quot;&lt;/span&gt;
ssh admin@db.myapp.com /bin/sh &lt;span class=&quot;sh&quot;&gt;&amp;lt;&amp;lt;EOT &amp;gt; $SQL_FILENAME
  echo &quot;Copying user...&quot; &amp;gt;&amp;amp;2
  echo &quot;COPY users FROM STDIN;&quot;
  psql -h db.myapp.com -U myusername mydatabase -c &quot;COPY (
    SELECT users.*
    FROM users
    WHERE id = ${USER_ID}
  ) TO STDOUT;&quot;
  echo &quot;\\.&quot;

  echo &quot;Copying user’s posts...&quot; &amp;gt;&amp;amp;2
  echo &quot;COPY posts FROM STDIN;&quot;
  psql -h db.myapp.com -U myusername mydatabase -c &quot;COPY (
    SELECT posts.*
    FROM posts
    WHERE user_id = ${user_id}
  ) TO STDOUT;&quot;
  echo &quot;\\.&quot;

  echo &quot;Copying post’s tags ...&quot; &amp;gt;&amp;amp;2
  echo &quot;COPY tags FROM STDIN;&quot;
  psql -h db.myapp.com -U myusername mydatabase -c &quot;COPY (
    SELECT tags.*
    FROM tags
    INNER JOIN posts ON posts.id = tags.post_id
    WHERE posts.user_id = ${user_id}
  ) TO STDOUT;&quot;
  echo &quot;\\.&quot;
EOT
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Let’s comment on what’s happening here. What we’re doing is essentially using Postgres’s &lt;code class=&quot;highlighter-rouge&quot;&gt;COPY&lt;/code&gt; function which is useful for moving data around tables. Usually it’s used to produce individual CSV files separately for each table, which are then individually restored using &lt;code class=&quot;highlighter-rouge&quot;&gt;COPY FROM&lt;/code&gt; command.&lt;/p&gt;

&lt;p&gt;Since this function is also able to read from the &lt;code class=&quot;highlighter-rouge&quot;&gt;STDIN&lt;/code&gt;, we bundle all &lt;code class=&quot;highlighter-rouge&quot;&gt;COPY&lt;/code&gt; commands together (using the  &lt;code class=&quot;highlighter-rouge&quot;&gt;.\&lt;/code&gt; which indicates the end of the input). Local PostgreSQL will then see sequences of &lt;code class=&quot;highlighter-rouge&quot;&gt;COPY FROM STDIN&lt;/code&gt;, then data, then &lt;code class=&quot;highlighter-rouge&quot;&gt;.\&lt;/code&gt;, indicating it’s done. We do this to avoid making multiple table-specific CSV files. Instead, we just put everything into one big SQL file.&lt;/p&gt;

&lt;p&gt;This was just the first part of the script. Now that we have the necessary data in an SQL file, we have to make place for it and restore it to our local database.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;-- Deleting old user data...&quot;&lt;/span&gt;
psql -d mydb_dev -c &lt;span class=&quot;s2&quot;&gt;&quot;
  DELETE FROM tags WHERE tags.id IN (
    SELECT tags.id
    FROM tags
    INNER join posts ON posts.id = tags.post_id
    WHERE user_id = &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;user_id&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;
  );

  DELETE FROM posts where user_id = &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;user_id&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;;
  DELETE FROM users where id = &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;user_id&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;;&quot;&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;-- Restoring fresh user data...&quot;&lt;/span&gt;
psql -d mydb_dev &amp;lt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;SQL_FILENAME&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;-- Deleting temp data...&quot;&lt;/span&gt;
rm &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;SQL_FILENAME&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;-- Done. Enjoy.&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Since this is only a partial dump related to a common resource or ancestor (application user, in this case), we need to make sure we also have all other data in our development database that the application needs to run and doesn’t belong to the user. Depending on your setup, you could easily restore those tables using &lt;code class=&quot;highlighter-rouge&quot;&gt;pg_dump&lt;/code&gt; command where you explicitly specify the tables.
But when you need to refresh only a subset of local data, a script like this comes in really handy.&lt;/p&gt;</content><category term="posts" /><summary>Sometimes we find ourselves in a need for copying and restoring a specific set of data belonging to a common parent resource. For example, we want to connect to the production server, pull down fresh data related only to the specified user and restore it to our development database to debug an issue or just develop new features. When your database is tiny, you could just restore the whole thing, but once it grows, the complete restoration is out of the question, especially when you need to do it often.</summary></entry><entry><title>CloudFront redirections for your SPA using AWS Lambda (A/B testing, maintenance page,…)</title><link href="/posts/cloudfront-redirections-lambda/" rel="alternate" type="text/html" title="CloudFront redirections for your SPA using AWS Lambda (A/B testing, maintenance page,...)" /><published>2017-09-10T00:00:00+02:00</published><updated>2017-09-10T00:00:00+02:00</updated><id>/posts/cloudfront-redirections-lambda</id><content type="html" xml:base="/posts/cloudfront-redirections-lambda/">&lt;p&gt;For many people, the stack of choice for deploying a JavaScript application (SPA) or other assets is to save them to Amazon S3 and serve it to the world over Amazon CloudFront CDN. With its cached edges around the world, it makes sure the users’ browsers are able to download your application in the most efficient way possible.&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;/images/lambda-post/cloudfront-map.png&quot;&gt;&lt;img src=&quot;/images/lambda-post/cloudfront-map.png&quot; /&gt;&lt;/a&gt;
    &lt;center&gt;
    &lt;figcaption&gt;At the time of writing, CloudFront offers around 100 edge locations around the globe.&lt;/figcaption&gt;&lt;/center&gt;
&lt;/figure&gt;

&lt;p&gt;A possible drawback of this application/server architecture is that your JavaScript application or other content is cached in various cache servers placed globally, and that seems problematic in cases where you want to suddenly place a redirection switch - serving your users something else, depending on some condition or request. You’re not in complete control of your server(s), and cache invalidations and DNS changes could take forever, especially in urgencies.&lt;/p&gt;

&lt;p&gt;One of these cases is showing a “maintenance site”. You know - those “We’ll be back shortly.” notices, when engineers are either sweatingly salvaging a botched back-end or just performing regular, scheduled maintenance.&lt;/p&gt;

&lt;p&gt;A popular technique in SPAs is to detect these adversities by listening for &lt;code class=&quot;highlighter-rouge&quot;&gt;5xx&lt;/code&gt; responses from the API server and rendering a “Maintenance” message. It’s a valid approach, but this comes with a couple of assumptions which make the problem detection unreliable.&lt;/p&gt;

&lt;p&gt;Two major assumptions:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;JavaScript application works OK,&lt;/li&gt;
  &lt;li&gt;Server is responding with HTTP code &lt;code class=&quot;highlighter-rouge&quot;&gt;5xx&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But, what if your build system deploys a broken bundle which doesn’t work in a browser anymore (or maybe it breaks only in specific browsers)? What if your async API requests are timeouting and you don’t get any response?&lt;/p&gt;

&lt;p&gt;In these cases it’s best to have a manual switch &lt;strong&gt;on the server level&lt;/strong&gt; that puts your website into maintenance mode while you do the fixing.&lt;/p&gt;

&lt;p&gt;With CloudFront you’re able to achieve this by using &lt;a href=&quot;http://docs.aws.amazon.com/lambda/latest/dg/lambda-edge.html&quot;&gt;Lambda@Edge&lt;/a&gt; functions (an extension of AWS Lambda) in the Viewer Request trigger, which triggers BEFORE the CloudFront cache is checked and returned. Within this function you could do many different things, for example:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Inspect cookies, User-Agent, headers,…&lt;/li&gt;
  &lt;li&gt;Do HTTP redirections, personalize and generate responses depending on location and various other criteria, serve different content for crawler bots,&lt;/li&gt;
  &lt;li&gt;Make network calls to external resources (e.g., authorization).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Returning to the maintenance page switch, we could write a Lambda function like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;handler&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;302&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;statusDescription&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;Found&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;Location&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;https://my-site.com/maintenance.html&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}],&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;When we want to put this redirection to work, we simply assign its ARN to our CloudFront distribution in its behaviour settings:&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;/images/lambda-post/cloudfront-lambda-redirect.png&quot;&gt;&lt;img src=&quot;/images/lambda-post/cloudfront-lambda-redirect.png&quot; /&gt;&lt;/a&gt;
    &lt;figcaption&gt;CloudFront distribution behaviour settings.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;… and remove it once you don’t want the redirection anymore. The change is usually processed within a very short period of time (which is usually not the case when saving adjustments in CloudFront distributions).&lt;/p&gt;

&lt;p&gt;This mechanism can be used for a lot of other practical implementations, like A/B testing redirections, logging and handling web client specifics.&lt;/p&gt;</content><category term="posts" /><summary>For many people, the stack of choice for deploying a JavaScript application (SPA) or other assets is to save them to Amazon S3 and serve it to the world over Amazon CloudFront CDN. With its cached edges around the world, it makes sure the users’ browsers are able to download your application in the most efficient way possible.</summary></entry><entry><title>List and download Dropbox files with Ruby</title><link href="/posts/download-dropbox-files-ruby/" rel="alternate" type="text/html" title="List and download Dropbox files with Ruby" /><published>2017-03-12T00:00:00+01:00</published><updated>2017-03-12T00:00:00+01:00</updated><id>/posts/download-dropbox-files-ruby</id><content type="html" xml:base="/posts/download-dropbox-files-ruby/">&lt;p&gt;If you find yourself in a need for downloading contents from Dropbox (or whole folders), a sane and quick way would be
to visit their web interface and select to download (compressed) files.&lt;/p&gt;

&lt;p&gt;But what about when you don’t have a password to access the interface, but you do have an API access token?&lt;/p&gt;

&lt;p&gt;I put together a small script to help you with that. Here it goes.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;fileutils&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;dropbox_sdk&quot;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# dropbox-sdk-ruby gem&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;DropboxClient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;access_token&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Recursively traverse the contents in dir_path&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;list_files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dir_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;metadata&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dir_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;contents&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;flat_map&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;is_dir&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;list_files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;path&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;path&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# A folder on your local machine where contents will be downloaded to&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dump_folder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;dropbox_dump&quot;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# List files for the root path (&#39;/&#39;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;file_paths&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;list_files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now we have the paths of all the files in the folder we provided (root folder). Let’s download them all.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;download_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dump_folder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;full_file_path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dump_folder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file_path&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;exist?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;full_file_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;File &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;full_file_path&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; already exists&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;contents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;metadata&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;get_file_and_metadata&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;full_folder_path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;dirname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;full_file_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;FileUtils&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;mkdir_p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;full_folder_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;full_file_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;wb&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;contents&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Download every file in file_paths to specified local dump folder&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;file_paths&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each_with_index&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Downloading &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file_path&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; ...&quot;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;download_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dump_folder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file_paths&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; to go&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content><category term="posts" /><summary>How to use Ruby Dropbox SDK to download files.</summary></entry><entry><title>Tips for writing an indie e-book</title><link href="/posts/tips-for-writing-an-indie-ebook/" rel="alternate" type="text/html" title="Tips for writing an indie e-book" /><published>2017-01-29T00:00:00+01:00</published><updated>2017-01-29T00:00:00+01:00</updated><id>/posts/tips-for-writing-an-indie-ebook</id><content type="html" xml:base="/posts/tips-for-writing-an-indie-ebook/">&lt;p&gt;With the advent of solopreneurship, &lt;a href=&quot;https://www.indiehackers.com&quot;&gt;indie hacking&lt;/a&gt; and side hustling, writing and self-publishing niche e-books became a well recognized source of passive income, and, more importantly, an effective sales funnel to your main business - be it a personal brand, consulting gigs, or various services.&lt;/p&gt;

&lt;p&gt;A bit less than a year ago, I set myself up for my first serious writing adventure. Out of appreciation and internal need to evangelize the coolness of &lt;a href=&quot;http://emberjs.com/&quot;&gt;Ember.js&lt;/a&gt; (a web programming framework), a technical e-book &lt;a href=&quot;http://emberjs-book.com/&quot;&gt;Front-end revolution with Ember.js&lt;/a&gt; was born.&lt;/p&gt;

&lt;p&gt;I extracted some valuable tips from my experience of writing and successfully delivering it to the target audience. I call it a success, because, with a marketing budget of €0.00, it helped more than 250 web developers learn to make web apps more efficiently. In addition to that, it still brings me passive revenue every month, and it grew my professional network and consulting business.&lt;/p&gt;

&lt;h2 id=&quot;the-prerequisites-for-writing-an-e-book&quot;&gt;The prerequisites for writing an e-book&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Know your field in depth&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;All humbleness aside, one ought to grow up and become an expert first. Know your stuff.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Have a knack for writing, form and story-telling&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Reading poor language and grammar destroys the experience. Nobody likes dull writing and genericism.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Be good at explaining&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;It’s easy to overestimate your mentoring abilites. Great tutoring is extremely hard.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Know your audience&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Do you know a community where there are at least 5 people who will buy your book right off the bat, or at least be very interested in? And I don’t mean your family. It’s the same as any other business. Do your market research.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Know your competitors&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Has your book already been written by somebody else? In that case, do you know its drawbacks and have constructed a plan how your e-book will address that?&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Do it for the greater good&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;There is too much bullshit out there. Write material because you genuinely like doing it and because it will help people. Quick dollar and recognition should be treated as happy side-effects.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;center&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Just found out some company is building a web thing for US Paralympics and they’re using my book to learn &lt;a href=&quot;https://twitter.com/hashtag/emberjs?src=hash&quot;&gt;#emberjs&lt;/a&gt;! 🤗&lt;a href=&quot;https://t.co/tv4BuDz1fF&quot;&gt;https://t.co/tv4BuDz1fF&lt;/a&gt;&lt;/p&gt;&amp;mdash; Matic Jurglič (@matixmatix) &lt;a href=&quot;https://twitter.com/matixmatix/status/794460016602468352&quot;&gt;November 4, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
&lt;/center&gt;

&lt;h2 id=&quot;tools&quot;&gt;Tools&lt;/h2&gt;

&lt;p&gt;Find an electronic book writing software that suits your needs. For example, if your book is about coding and includes computer code snippets, find something with a nice code syntax highlighter. Try to envision all the media material types that will be included, and choose accordingly.&lt;/p&gt;

&lt;p&gt;It’s very important the software you chose is able to export to a variety of formats. Of course, &lt;code class=&quot;highlighter-rouge&quot;&gt;.pdf&lt;/code&gt; is standard. A lot of people read on their e-readers, so make sure your writing software can spit out &lt;code class=&quot;highlighter-rouge&quot;&gt;.epub&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;.mobi&lt;/code&gt; formats. Don’t make the same rookie mistake as I did and write it in Pages (or MS Word). It will be an unmaintainable mess, and hard to export to a number of formats.&lt;/p&gt;

&lt;p&gt;If you don’t need anything special in that regards, there are some helpful e-book-creating services available, which can also act as a marketplace for your e-book. This is super helpful in case you don’t have an established following yet.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://leanpub.com/&quot;&gt;Leanpub&lt;/a&gt; offers integrated tooling for the whole journey: writing, publishing, marketing. Personally, I had great success with Leanpub, so I heavily recommend it. They’re promoting the books they think have potential (hint, hint: don’t be afraid to ask them to feature your e-book on their front page. You just might experience a spike in your sales on that day 🤑 ).&lt;/p&gt;

&lt;p&gt;There are other options, like &lt;a href=&quot;https://reedsy.com&quot;&gt;Reedsy&lt;/a&gt;, and &lt;a href=&quot;https://www.softcover.io/&quot;&gt;Softcover&lt;/a&gt;, which is more technical and needs more marketing setup.&lt;/p&gt;

&lt;h2 id=&quot;aesthetics-matter&quot;&gt;Aesthetics matter&lt;/h2&gt;

&lt;p&gt;The only popular books that can pull off a boring look is the Bible and O’Reilly books. So make sure to give your book an exciting cover.&lt;/p&gt;

&lt;p&gt;Here are some examples of rather boring e-book covers (that could make a potential reader wonder if the inside is equally dull 🤔):&lt;/p&gt;

&lt;figure class=&quot;third&quot;&gt;
  &lt;a href=&quot;https://leanpub.com/dowhatyoulove&quot;&gt;
    &lt;img src=&quot;/images/book-post/boring-book3.jpg&quot; /&gt;
    &lt;figcaption&gt;I can&#39;t even read the title.&lt;/figcaption&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://leanpub.com/whatsnewinjava8&quot;&gt;
	 &lt;img src=&quot;/images/book-post/boring-book2.jpg&quot; /&gt;
   &lt;figcaption&gt;Dry weed. Sounds good, right until you see this cover.&lt;/figcaption&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://leanpub.com/cstips&quot;&gt;
	 &lt;img src=&quot;/images/book-post/boring-book1.jpg&quot; /&gt;
   &lt;figcaption&gt;At least I can read the title.&lt;/figcaption&gt;
  &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Here are some examples of appealing e-book covers that make you wanna read it even though you have no idea what are they about:&lt;/p&gt;

&lt;figure class=&quot;third&quot;&gt;
  &lt;a href=&quot;https://leanpub.com/grumpy-phpunit&quot;&gt;
	 &lt;img src=&quot;/images/book-post/cool-cover1.jpg&quot; /&gt;
   &lt;figcaption&gt;Ha! Look at this frustrated elephant!&lt;/figcaption&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://leanpub.com/trailblazer&quot;&gt;
	 &lt;img src=&quot;/images/book-post/cool-cover2.jpg&quot; /&gt;
   &lt;figcaption&gt;Whoah, a crazy ride!&lt;/figcaption&gt;
  &lt;/a&gt;
  &lt;a href=&quot;https://leanpub.com/manualjornalismodigital&quot;&gt;
	 &lt;img src=&quot;/images/book-post/cool-cover3.jpg&quot; /&gt;
   &lt;figcaption&gt;So many cool looking things in shapes!&lt;/figcaption&gt;
  &lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;If you’re not a designing type, don’t worry. Pick some examples you like and ask your pixel savvy friend to help you out. Or, go to &lt;a href=&quot;https://www.fiverr.com/&quot;&gt;Fiverr&lt;/a&gt; and get one for 5 bucks.&lt;/p&gt;

&lt;h2 id=&quot;writing-tactics-for-upselling-and-getting-subscribers&quot;&gt;Writing tactics for upselling and getting subscribers&lt;/h2&gt;

&lt;p&gt;The point is to to get your readers’ attention for a longer time period than just the duration of reading your e-book. To do that, introduce a few hooks in different sections of your e-book. Some ideas:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;If you have a mailing list, Twitter, or a blog, pick the most interesting sections of your book and next to them, offer your readers to follow you there if they want to know more.&lt;/li&gt;
  &lt;li&gt;If you have another product (some other e-book, videos, a course,…), try to touch its topic in one of your sections, and paste the link.&lt;/li&gt;
  &lt;li&gt;Offer extra content your readers can unlock if they award you with your email and subscribe to your stuff.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You’re providing your readers with extra value, so don’t be afraid to throw a couple of these tricks inside your e-book.&lt;/p&gt;

&lt;h2 id=&quot;dedicated-website&quot;&gt;Dedicated website&lt;/h2&gt;

&lt;p&gt;If you’re serious about your indie e-book, it deserves to have &lt;a href=&quot;http://emberjs-book&quot;&gt;its own website&lt;/a&gt;, or its own section as a part of your existing website. This way, you’re in complete control of its SEO (and independent from other book markets, in case you chose to sell your book in any of them).&lt;/p&gt;

&lt;p&gt;Again, if your right brain hemisphere is underdeveloped, fear not. There is a big collection of good looking e-book website templates available on template markets. You can get one for cheap, fill in the copywriting and price, and you’re almost good to go. Include some real reader testimonials if you can.&lt;/p&gt;

&lt;p&gt;The only thing you need is a middleman that implements the payment infrastructure so you don’t have to deal with that. Probably the most popular service for that is &lt;a href=&quot;gumroad.com&quot;&gt;Gumroad&lt;/a&gt;. There you can upload your material and link it from your website. They take care of charging your reader and releasing them your material. You can configure coupons, promo codes, etc.&lt;/p&gt;

&lt;p&gt;Make sure to offer a chapter or two of your book for free. Let the reader input their email, and send them a free preview.&lt;/p&gt;

&lt;figure class=&quot;half&quot; style=&quot;text-align: center&quot;&gt;
    &lt;a href=&quot;http://emberjs-book.com&quot; style=&quot;margin: 0 auto&quot;&gt;&lt;img src=&quot;/images/book-post/free-pdf.jpg&quot; /&gt;&lt;/a&gt;
    &lt;figcaption&gt;Put this on your website.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;I like this as I can ask people who decided not to buy the book what exactly turned them off.&lt;/p&gt;

&lt;h2 id=&quot;setting-the-price&quot;&gt;Setting the price&lt;/h2&gt;

&lt;p&gt;Pricing your e-book is tricky.&lt;/p&gt;

&lt;p&gt;Is it better to sell more copies for a cheaper price, or fewer for more? Finding a sweet spot in between not being perceived as cheap and not making your potential readers have second thoughts could be compared to predicting the stock market.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://signalvnoise.com/posts/3394-how-to-price-something&quot;&gt;Jason Fried&lt;/a&gt; made a fortune selling products online, and his advice is:&lt;/p&gt;

&lt;blockquote&gt;
  You can make up a number and see if it works.
&lt;/blockquote&gt;

&lt;p&gt;It’s good enough for a starting point, and you can always adjust it if you feel like you need it.&lt;/p&gt;

&lt;p&gt;Enabling multiple price brackets can increase conversions. It all depends on what you can offer together with your book. Have some videos, screencasts, or other material that could go with your book? Bundle it up and charge more than the price of your e-book alone.&lt;/p&gt;

&lt;p&gt;If you don’t have anything else to offer, you can sell your consulting. In my case, everything I could offer is my e-book and my knowledge, so I had to get a bit creative:&lt;/p&gt;

&lt;figure class=&quot;single&quot; style=&quot;text-align: center&quot;&gt;
    &lt;a href=&quot;http://emberjs-book.com&quot;&gt;&lt;img src=&quot;/images/book-post/pricing.png&quot; /&gt;&lt;/a&gt;
    &lt;figcaption style=&quot;width: 100%&quot;&gt;Come up with different packages.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Offering &lt;strong&gt;team licences&lt;/strong&gt; proved to be a good selling tactic.&lt;/p&gt;

&lt;p&gt;What I learned is that a lot of companies have money and want to do what is right. I never believed anybody will buy the third bracket, and I felt a bit sleazy adding it. It’s essentially the same thing, just with one small hour of my time added. It turned out I made quite a few of these &lt;strong&gt;“Extra”&lt;/strong&gt; package sales. What’s even better, a lot of them didn’t ask for any consulting. And the best thing is that those few who asked for consulting, wanted to keep me around for extra help at a premium rate.&lt;/p&gt;

&lt;p&gt;Another lesson I learned is that people will buy your e-book even when there are free alternatives available, but you have to convince them that your material is superior and provides better value. It’s also in human nature to assign more value and worth to purchaseable products, compared to the free ones.&lt;/p&gt;

&lt;h2 id=&quot;launch-many-times&quot;&gt;Launch many times&lt;/h2&gt;

&lt;p&gt;After you launch your e-book, create many micro-launches.&lt;/p&gt;

&lt;p&gt;Added something new to the book? Create a fuss and share it all over. Holiday season? Offer a special holiday deal and let everybody know about it. This way you can push your sales and let people know your book is still up to date.&lt;/p&gt;

&lt;h2 id=&quot;team-up&quot;&gt;Team up&lt;/h2&gt;

&lt;p&gt;Another useful tactic is to team up with another author and sell your e-books combined for a discounted price. “Get more for less”, they say.&lt;/p&gt;

&lt;p&gt;In my case, I discovered that &lt;a href=&quot;http://thejsguy.com/&quot;&gt;David&lt;/a&gt; wrote a similar, but even more specialized &lt;a href=&quot;https://leanpub.com/emberdatainthewild&quot;&gt;e-book&lt;/a&gt;, and reached out to ask him if we can put our e-books in a bundle to sell them together for a lower price. Luckily, he was up for it, and after a few clicks on Leanpub, a new &lt;a href=&quot;https://leanpub.com/b/ember-bundle&quot;&gt;Ember Bundle&lt;/a&gt; was born. Apparently, readers like the combo, and the sales went up again 😎.&lt;/p&gt;

&lt;figure class=&quot;half&quot; style=&quot;text-align: center&quot;&gt;
    &lt;a href=&quot;https://leanpub.com/b/ember-bundle&quot; style=&quot;margin: 0 auto&quot;&gt;&lt;img src=&quot;/images/book-post/bundle.jpg&quot; /&gt;&lt;/a&gt;
    &lt;figcaption&gt;Our bundle on Leanpub.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&quot;its-hard&quot;&gt;It’s hard&lt;/h2&gt;

&lt;p&gt;Niche e-books usually reach hit or fad popularity, which means a low chance of on-going revenue after you are finished, especially in tech and marketing, where things move quickly. So, given how much work you’re planning to sink into it, you need to decide if it’s worth it.&lt;/p&gt;

&lt;p&gt;While writing it, I found myself so caught up in the details that I could &lt;strong&gt;no longer imagine how anybody could find my e-book useful&lt;/strong&gt;. The mental burden of delivering valuable and correct educational stuff nearly eradicated my will to finish it. When inspiration diminished, grit and discipline helped me push through.&lt;/p&gt;

&lt;p&gt;In the end, it was all worth it.&lt;/p&gt;

&lt;p&gt;&lt;small&gt; Special thanks to &lt;a href=&quot;https://twitter.com/artto&quot;&gt;@artto&lt;/a&gt; for designing the e-book’s cover and Katherine from Russia for reviewing this article. &lt;/small&gt;&lt;/p&gt;</content><category term="posts" /><summary>Write material because you genuinely like doing it and because it will help people. Quick dollar should be treated as a happy side-effect.</summary></entry><entry><title>Dynamic CSS in Ember templates</title><link href="/posts/dynamic-css-in-ember-templates/" rel="alternate" type="text/html" title="Dynamic CSS in Ember templates" /><published>2016-11-12T00:00:00+01:00</published><updated>2016-11-12T00:00:00+01:00</updated><id>/posts/dynamic-css-in-ember-templates</id><content type="html" xml:base="/posts/dynamic-css-in-ember-templates/">&lt;p&gt;Recently I was challenged with a task to dynamically colorize checkboxes when they are selected. The colors are generated on-the-fly when the select action is triggered:&lt;/p&gt;

&lt;iframe src=&quot;//giphy.com/embed/qeUvEToKvHGBa&quot; width=&quot;400&quot; height=&quot;250&quot; frameborder=&quot;0&quot; class=&quot;giphy-embed&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;small&gt;Finished functionality. It’s a selector for chart series.&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;Since we generate colors dynamically and thus can’t make predefined CSS classes that determine the checkbox’s color, I thought it should be enough to simply inline the color style, like so:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;{{#&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;chartSeries&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;series&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}}&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;checkbox&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;checkbox&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;html-safe&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;concat&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;color:&#39;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;series&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;checked=…&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;label&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;for=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;series&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;seriesId&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
      &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;series&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;lt;/label&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;{{/&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;each&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;small&gt;Random color is set to the the &lt;code class=&quot;highlighter-rouge&quot;&gt;series.color&lt;/code&gt; property on checkbox change event.&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;Due to the way these custom checkboxes are implemented, I learned this is not going to work. The place to define checkbox’s background color is actually in the label’s &lt;code class=&quot;highlighter-rouge&quot;&gt;::before&lt;/code&gt; pseudo selector:&lt;/p&gt;

&lt;figure class=&quot;half&quot;&gt;
    &lt;a href=&quot;/images/dynamic-css-post/1.jpg&quot;&gt;&lt;img src=&quot;/images/dynamic-css-post/1.jpg&quot; /&gt;&lt;/a&gt;
    &lt;figcaption&gt;You can&#39;t implement pseudo-element declarations using inline CSS.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&quot;lesson-1-css-is-not-designed-to-accept-pseudo-element-styles-in-the-style-attribute&quot;&gt;Lesson 1: CSS is not designed to accept pseudo-element styles in the style attribute.&lt;/h2&gt;

&lt;p&gt;What can we do?&lt;/p&gt;

&lt;p&gt;The only solution that came to my mind is to generate CSS classes dynamically. I naively wrote this piece of code in the template, and for some reason, I didn’t expect it to work:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;{{#&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;chartSeries&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;series&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
    input[type=&quot;checkbox&quot;]#&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;series&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;seriesId&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.styled:checked + label:before {
      background: &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;series&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;;
      border-color: &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;series&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;;
    }
  &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;{{/&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;each&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;But it did. I was amazed by how Ember’s templating engine digests this without problems, and dynamically adds the necessary CSS declarations to the &lt;code class=&quot;highlighter-rouge&quot;&gt;style&lt;/code&gt; tag when the &lt;code class=&quot;highlighter-rouge&quot;&gt;chartSeries&lt;/code&gt; array changes:&lt;/p&gt;

&lt;figure class=&quot;half&quot;&gt;
    &lt;a href=&quot;/images/dynamic-css-post/2.jpg&quot;&gt;&lt;img src=&quot;/images/dynamic-css-post/2.jpg&quot; /&gt;&lt;/a&gt;
    &lt;figcaption&gt;The templating engine inserts some whitespace, but we can live with that.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&quot;lesson-2-when-you-need-a-dirty-workaround-embers-templating-engine-can-reactively-spit-out-practically-any-markup-a-browser-can-understand&quot;&gt;Lesson 2: When you need a dirty workaround, Ember’s templating engine can reactively spit out practically any markup a browser can understand.&lt;/h2&gt;

&lt;p&gt;Just be careful not to ruin your site’s performance.&lt;/p&gt;

&lt;p&gt;In our case, every time the &lt;code class=&quot;highlighter-rouge&quot;&gt;chartSeries&lt;/code&gt; array changes, the browser needs to recalculate style, which could lead to page clunkiness if we had a lot of elements and a lot of updates in a short amount of time.&lt;/p&gt;</content><category term="posts" /><summary>When you need a dirty workaround, Ember&#39;s templating engine can reactively spit out practically any markup a browser can understand.</summary></entry><entry><title>Making a concrete fibonacci clock</title><link href="/posts/concrete-fibonacci-clock/" rel="alternate" type="text/html" title="Making a concrete fibonacci clock" /><published>2016-11-06T00:00:00+01:00</published><updated>2016-11-06T00:00:00+01:00</updated><id>/posts/concrete-fibonacci-clock</id><content type="html" xml:base="/posts/concrete-fibonacci-clock/">&lt;p&gt;The idea of the Fibonacci clock is a brainchild of &lt;a href=&quot;http://basbrun.com/&quot;&gt;Philippe Chrétien&lt;/a&gt;, who calls his creation “a clock for nerds with style”. It’s certainly not a very practical clock, but the fusion of the curious numerical sequence with a lighting installation aesthetic is just too appealing to look away.&lt;/p&gt;

&lt;figure class=&quot;half&quot;&gt;
    &lt;a href=&quot;/images/fibonacci/IMG_8108.jpg&quot;&gt;&lt;img src=&quot;/images/fibonacci/IMG_8108.jpg&quot; /&gt;&lt;/a&gt;
    &lt;a href=&quot;/images/fibonacci/IMG_8110.jpg&quot;&gt;&lt;img src=&quot;/images/fibonacci/IMG_8110.jpg&quot; /&gt;&lt;/a&gt;
    &lt;figcaption&gt;My concrete fibonacci clock in action. It&#39;s supposed to tell time...&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;To tell the time on this timepiece, you need to use some brains. There’s an equation (check out &lt;a href=&quot;https://www.kickstarter.com/projects/basbrun/fibonacci-clock-an-open-source-clock-for-nerds-wit&quot;&gt;this link&lt;/a&gt; for more details) where you use numbers related to which chamber is lit with which color. Here’s an example:&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;/images/fibonacci/instructions.png&quot;&gt;&lt;img src=&quot;/images/fibonacci/instructions.png&quot; /&gt;&lt;/a&gt;
    &lt;figcaption&gt;The screen of the clock is made up of five squares whose side lengths match the first five Fibonacci numbers: 1, 1, 2, 3 and 5.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Phillipe is offering finished products in pretty wooden casings, but I needed to add one extra dimension: &lt;strong&gt;brutality&lt;/strong&gt;. Let’s make this thing out of concrete! I purchased the electronics part (LEDs and the controller) only, and used them for my interpretation of the clock.&lt;/p&gt;

&lt;h2 id=&quot;make-a-mold&quot;&gt;Make a mold&lt;/h2&gt;

&lt;p&gt;For molding of my concrete projects I often use Styrodur (a brand of extruded polystyrene) which I find to be the perfect tradeoff between the ease of handling and rigidness for holding shape (for smaller objects at least). The pieces are glued together.&lt;/p&gt;

&lt;figure class=&quot;half&quot;&gt;
     &lt;a href=&quot;/images/fibonacci/IMG_6769.jpg&quot;&gt;&lt;img src=&quot;/images/fibonacci/IMG_6769.jpg&quot; /&gt;&lt;/a&gt;
     &lt;a href=&quot;/images/fibonacci/IMG_6802.jpg&quot;&gt;&lt;img src=&quot;/images/fibonacci/IMG_6802.jpg&quot; /&gt;&lt;/a&gt;
     &lt;figcaption&gt;The idea is to make a box where the concrete is simply poured in, and when the concrete &quot;dries up&quot;, the mold is taken apart, which leaves us with a shaped brick.&lt;/figcaption&gt;
 &lt;/figure&gt;

&lt;h2 id=&quot;pour-the-concrete-into-the-mold&quot;&gt;Pour the concrete into the mold&lt;/h2&gt;
&lt;p&gt;I use a mixture of standard cement, sand, water. Adding reinforcement is crucial, otherwise the concrete brick falls apart and cracks. In this case I used glass fiber, but I’m regretting it, because the fibers make the the surface of the concrete look bad (tiny stripes and scars). I should have just used good old steel reinforcement.&lt;/p&gt;

&lt;p&gt;This amount of concrete is surprisingly heavy (weight of a small child), and somehow I didn’t fully account for that during the process. As I was pouring the concrete in the mold, the outer walls started to bend. Yikes! I needed a quick way to ensure the walls stay straight using whatever I could find in that moment. Behold the various things holding it together.&lt;/p&gt;

&lt;figure class=&quot;half&quot;&gt;
    &lt;a href=&quot;/images/fibonacci/IMG_6819.jpg&quot;&gt;&lt;img src=&quot;/images/fibonacci/IMG_6819.jpg&quot; /&gt;&lt;/a&gt;
    &lt;a href=&quot;/images/fibonacci/IMG_6821 2.jpg&quot;&gt;&lt;img src=&quot;/images/fibonacci/IMG_6821 2.jpg&quot; /&gt;&lt;/a&gt;
    &lt;figcaption&gt;The insides are coated with vegetable oil for easier dismantling.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&quot;take-the-brick-out-of-the-mold&quot;&gt;Take the brick out of the mold&lt;/h2&gt;

&lt;p&gt;There’s nothing sweeter than the smell of freshly cured concrete in the morning. I tore the skeleton apart, and found this beauty underneath. To get the wiring through, holes were drilled in the inner walls.&lt;/p&gt;

&lt;figure class=&quot;half&quot;&gt;
    &lt;a href=&quot;/images/fibonacci/IMG_6827.jpg&quot;&gt;&lt;img src=&quot;/images/fibonacci/IMG_6827.jpg&quot; /&gt;&lt;/a&gt;
    &lt;a href=&quot;/images/fibonacci/IMG_7784.jpg&quot;&gt;&lt;img src=&quot;/images/fibonacci/IMG_7784.jpg&quot; /&gt;&lt;/a&gt;
    &lt;figcaption&gt;You can see glass fibre on the edges. It’s effective for strength, but looks ugly on the surface.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Did you know it can take up to 20 years for the concrete to fully harden and settle?&lt;/p&gt;

&lt;h2 id=&quot;attach-acrylic-glass&quot;&gt;Attach acrylic glass&lt;/h2&gt;

&lt;p&gt;With a jig saw, I cut the covers out of an acrylic glass sheet, drilled the holes for the bolts and attached the nuts:&lt;/p&gt;

&lt;figure class=&quot;half&quot;&gt;
    &lt;a href=&quot;/images/fibonacci/IMG_7786.jpg&quot;&gt;&lt;img src=&quot;/images/fibonacci/IMG_7786.jpg&quot; /&gt;&lt;/a&gt;
    &lt;a href=&quot;/images/fibonacci/IMG_7810.jpg&quot;&gt;&lt;img src=&quot;/images/fibonacci/IMG_7810.jpg&quot; /&gt;&lt;/a&gt;
    &lt;figcaption&gt;Test fit.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&quot;sand-and-color&quot;&gt;Sand and color&lt;/h2&gt;

&lt;p&gt;Time to sand this sucker down and make it smooth. The amount of dust generated while sanding concrete is colossal and disgusting. The brick was then coated with a protective waterproofer.&lt;/p&gt;

&lt;figure class=&quot;half&quot;&gt;
    &lt;a href=&quot;/images/fibonacci/IMG_7937.jpg&quot;&gt;&lt;img src=&quot;/images/fibonacci/IMG_7937.jpg&quot; /&gt;&lt;/a&gt;
    &lt;a href=&quot;/images/fibonacci/IMG_8062.jpg&quot;&gt;&lt;img src=&quot;/images/fibonacci/IMG_8062.jpg&quot; /&gt;&lt;/a&gt;
    &lt;figcaption&gt;I didn&#39;t like the look of the silver bolts, so I decided to paint them black.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&quot;finish-up&quot;&gt;Finish up&lt;/h2&gt;

&lt;p&gt;To project as much light as possible onto the acrylic sheets from the LEDs behind, I made an internal wooden enclosure and covered it with aluminum reflective foil. Let’s also add some legs, so the clock won’t leave scrathes all over the place.&lt;/p&gt;

&lt;figure class=&quot;half&quot;&gt;
    &lt;a href=&quot;/images/fibonacci/IMG_8060.jpg&quot;&gt;&lt;img src=&quot;/images/fibonacci/IMG_8060.jpg&quot; /&gt;&lt;/a&gt;
    &lt;a href=&quot;/images/fibonacci/IMG_8064.jpg&quot;&gt;&lt;img src=&quot;/images/fibonacci/IMG_8064.jpg&quot; /&gt;&lt;/a&gt;
    &lt;figcaption&gt;Almost done.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure class=&quot;half&quot;&gt;
    &lt;a href=&quot;/images/fibonacci/IMG_8095.jpg&quot;&gt;&lt;img src=&quot;/images/fibonacci/IMG_8095.jpg&quot; /&gt;&lt;/a&gt;
    &lt;figcaption&gt;Done.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;The clock also comes with a secret mode that continuously flashes through a vast spectre of colors. A real feast for the eyes.&lt;/p&gt;

&lt;iframe src=&quot;//giphy.com/embed/DkghEwh3sVz6E&quot; width=&quot;480&quot; height=&quot;270&quot; frameborder=&quot;0&quot; class=&quot;giphy-embed&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;</content><category term="posts" /><summary>Not a very practical clock, but the fusion of the curious numerical sequence with a lighting installation aesthetic is just too appealing to look away.</summary></entry><entry><title>Recurring subscription payments: use external service or make your own?</title><link href="/posts/subscription-payments-use-external-service-or-make-your-own/" rel="alternate" type="text/html" title="Recurring subscription payments: use external service or make your own?" /><published>2016-09-19T00:00:00+02:00</published><updated>2016-09-19T00:00:00+02:00</updated><id>/posts/subscription-payments-use-external-service-or-make-your-own</id><content type="html" xml:base="/posts/subscription-payments-use-external-service-or-make-your-own/">&lt;p&gt;Billing is far more complex than people tend to believe, and much more so with subscriptions.&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet tw-align-center&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Remind me to never make a subscription service again.&lt;/p&gt;&amp;mdash; Jeffrey Biles (@JeffreyBiles) &lt;a href=&quot;https://twitter.com/JeffreyBiles/status/775371558768390144&quot;&gt;September 12, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;center&gt;&lt;small&gt;I feel your pain, Jeffrey. It&#39;s hard to get it right.&lt;/small&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Subscriptions are a common business model in paid online products, especially in SaaS world. That means the customers are charged in a recurring fashion; most commonly monthly or yearly.&lt;/p&gt;

&lt;p&gt;After you convinced your customer to enter their payment vehicle (credit card, PayPal, etc), there are two ways you can trigger acquiring currency when their payment is due:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Use an external billing service (&lt;a href=&quot;https://www.braintreegateway.com/&quot;&gt;Braintree&lt;/a&gt;, &lt;a href=&quot;https://recurly.com/product/&quot;&gt;Recurly&lt;/a&gt;, &lt;a href=&quot;https://stripe.com&quot;&gt;Stripe&lt;/a&gt;, &lt;a href=&quot;https://cheddargetter.com/&quot;&gt;Chedargetter&lt;/a&gt;,…) and let it do &lt;strong&gt;all&lt;/strong&gt; the billing work. Let it charge your customers on a recurring basis and send you event notifications, which you use to update your system - prolong or expire customers’ subscription. Simple, fast, reliable, but severely limited in customization as your business needs grow.&lt;/li&gt;
  &lt;li&gt;Also use one of the billing services*, but only manually - implement your own payment scheduler (usually with a cron job or a run loop) and bill the customers using your own server. Periodically use the payment service’s API to bill customers, and handle all the results yourself. It’s more complex and bug prone, takes more time to implement, but you’re in complete control and know exactly how your billing system works, especially when something breaks.
&lt;br /&gt;&lt;br /&gt;&lt;span&gt;*&lt;/span&gt; &lt;small&gt;assuming you’re offloading PCI responsibility to a payment processor by only storing customer tokens on your server instead of raw payment method data. &lt;/small&gt;
 &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So, what does this recurring work actually include? The most basic flow is this: every month,&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;determine&lt;/strong&gt; payment amount depending on customer’s subscription plan,&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;charge&lt;/strong&gt; the amount using their payment method,&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;update&lt;/strong&gt; their subscription in your application’s database,&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;send&lt;/strong&gt; an invoice.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;you-need-to-decide-what-kind-of-billing-mechanics-your-business-needs&quot;&gt;You need to decide what kind of billing mechanics your business needs.&lt;/h2&gt;

&lt;p&gt;&lt;span style=&quot;margin-top: 20px; display: inline-block;&quot;&gt;Let’s compare both ways a little bit more in depth.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Using option 1, you populate the external service with your subscription plans, add-ons, coupons and perhaps configure trial periods. When customers subscribe to your product, your application registers them to the billing service. It takes care of deducting your customers’ money every month/year and sending it to your wallet. For every payment activity (successful charge, declined card, etc), they send an event notification, usually as HTTP requests to your API - also known as “reverse API”. You use these notifications to extend or halt your customers’ subscriptions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The main benefit here is that you spend very little time developing a billing system.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When you are just starting out, or when you’re certain your billing dynamics aren’t going to be very diverse, implementing your own billing system is most probably a waste of time. This way you usually also get some basic billing analytics with it, which is really useful for monitoring customer and revenue churn rates.&lt;/p&gt;

&lt;h2 id=&quot;as-your-business-grows-things-can-quickly-get-complicated&quot;&gt;As your business grows, things can quickly get complicated.&lt;/h2&gt;

&lt;p&gt;&lt;span style=&quot;margin-top: 20px; display: inline-block;&quot;&gt;Consider diverse subscription plans, coupons and add-ons with variable durations and prices depending on various conditions, multi-currency, multi-tenancy and dunning.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Let’s list some examples.&lt;/p&gt;

&lt;p&gt;What if…&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;a customer decides to upgrade from a monthly to a yearly subscription in the middle of the month, and you have some custom rules for a pro-rate refund?&lt;/li&gt;
  &lt;li&gt;a coupon is valid only for an upgrade to a larger subscription?&lt;/li&gt;
  &lt;li&gt;there is a second trial period for some customers?&lt;/li&gt;
  &lt;li&gt;an add-on is cheaper on a larger subscription plan?&lt;/li&gt;
  &lt;li&gt;there is a special discount for people paying with a debit visa card?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;See the pattern?&lt;/p&gt;

&lt;p&gt;In cases like this, you can’t escape having a custom tailored business logic for determining the amount to charge. As your pricing plans become more convoluted with discounting, optional add-ons and conditionals it becomes hard not just to bill, but also to keep track of activities, ordering, and reporting.&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;http://i.imgur.com/cLU8h3D.png&quot; alt=&quot;RankTrackr Billing&quot; title=&quot;RankTrackr billing&quot; style=&quot;width: 520px; margin-top: 20px;&quot; /&gt;&lt;/center&gt;
&lt;center&gt;&lt;small&gt;At &lt;a href=&quot;http://ranktrackr.com&quot;&gt;RankTrackr&lt;/a&gt; we built a custom billing service. It runs every day at 10AM and shows the results in Slack. &lt;/small&gt;&lt;/center&gt;

&lt;p&gt;&lt;br /&gt;
&lt;span style=&quot;margin-top: 15px; display: block;&quot;&gt;Subscription payments are one of the most delicate parts of your online business, so do your homework, because migrating to a different subscription payment implementation is distressing and expensive.&lt;/span&gt;&lt;/p&gt;</content><category term="posts" /><summary>Billing is far more complex than people tend to believe, and much more so with subscriptions.</summary></entry><entry><title>Tips for selling your side project</title><link href="/posts/tips-for-selling-your-side-project/" rel="alternate" type="text/html" title="Tips for selling your side project" /><published>2016-08-08T00:00:00+02:00</published><updated>2016-08-08T00:00:00+02:00</updated><id>/posts/tips-for-selling-your-side-project</id><content type="html" xml:base="/posts/tips-for-selling-your-side-project/">&lt;p&gt;Side projects are expressions of creativity, they are tools for fixing frustrations, having fun and brushing up on skills. This is true for all areas of life, not just in software projects, which this post is about.&lt;/p&gt;

&lt;p&gt;Always be doing side projects if you want to stay relevant, especially to yourself.&lt;/p&gt;

&lt;!-- Sometimes, side projects actually grow into something that other people could use too. You have something to show. That’s incredible! Perhaps you published it and have a few people using it. You managed to ship the damn thing, but then… It’s just sitting there. You lose interest. You think your project has potential, but you leave it standing, because you find yourself caught up in another project and can find a better use of your time.   --&gt;

&lt;p&gt;This is a story of how I managed to sell my simple project to a guy from the internet and earned an amount of cash equivalent to my yearly supply of beer, and trust me, I REALLY like beer. All I did was put together a trivial web app to scratch my own itch, and it keeps scratching it, while I drink my free beer.&lt;/p&gt;

&lt;p&gt;Here’s the project: &lt;a href=&quot;http://sitestalker.net&quot;&gt;Sitestalker&lt;/a&gt;. I made it because I needed to buy a car and grew sick of checking used car ads every day. At first it was just a simple script. I built an interface around it. A few hours of work.&lt;/p&gt;

&lt;p&gt;Following these rules, I got somebody to buy the project.&lt;/p&gt;

&lt;h2 id=&quot;make-it-look-good&quot;&gt;1. Make it look good&lt;/h2&gt;

&lt;p&gt;Whatever your side project does, make a nice presentation page with brief explanations. I know, copywriting is hard. But also an invaluable skill for life, so why not practice it whenever you can? If you can’t design, get a cheap template, or just copy something you like. Put in some user testimonials if you can get them.&lt;/p&gt;

&lt;p&gt;Nobody’s buying websites with default Bootstrap theme.&lt;/p&gt;

&lt;h2 id=&quot;display-value&quot;&gt;2. Display value&lt;/h2&gt;

&lt;p&gt;Stick in some Google Analytics. Do basic SEO, optimize for your keywords. Check how Google sees you. Offer user sign up if you can (if that’s the nature of your product), otherwise try to collect emails. Always collect emails. Try to push the project in your online social circle. Don’t be afraid to show what you have. Screw the haters, seriously. Make some traffic. This is essentially what you’re selling, and what your possible buyers are looking for.&lt;/p&gt;

&lt;p&gt;People who look to buy projects like nice traffic charts. Nobody’s buying flat line projects.&lt;/p&gt;

&lt;h2 id=&quot;publish-it-on-the-side-project-market&quot;&gt;3. Publish it on the side project market&lt;/h2&gt;

&lt;p&gt;The most popular markets for selling side projects are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://flippa.com&quot;&gt;Flippa&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.sideprojectors.com&quot;&gt;SideProjectors&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://empireflippers.com/&quot;&gt;Empire Flippers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Often there are also discussions on Reddit and Hacker News where people discuss selling their projects: &lt;a href=&quot;https://news.ycombinator.com/item?id=7656154&quot;&gt;example 1&lt;/a&gt;, &lt;a href=&quot;https://news.ycombinator.com/item?id=7656154&quot;&gt;example 2&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Publish your thing in these websites. Write a solid sales pitch. Write your ideas for future development. If your side project doesn’t have a lot of traffic, try giving some ideas on how to improve that. The same goes for monetization. How can a buyer adopt your product and make profit? Give them ideas. Try to sell your support if they need it.&lt;/p&gt;

&lt;h2 id=&quot;package-and-document-it&quot;&gt;4. Package and document it&lt;/h2&gt;

&lt;p&gt;You have to come up with a way to minimize the time and cost of transferring the project - the application, the code and the knowledge on how to operate and maintain the project.&lt;/p&gt;

&lt;p&gt;Here’s some ideas:&lt;/p&gt;

&lt;p&gt;Transfer the code by pushing it to a private code repository (free at &lt;a href=&quot;https://bitbucket.org&quot;&gt;Bitbucket&lt;/a&gt; or &lt;a href=&quot;https://about.gitlab.com/&quot;&gt;GitLab&lt;/a&gt;), then transfer the ownership to your buyer. They’ll see the code, and if the code is shit, then you may be in trouble. So write cool code.&lt;/p&gt;

&lt;p&gt;Transfer the running application by deploying it to &lt;a href=&quot;https://www.digitalocean.com/&quot;&gt;DigitalOcean&lt;/a&gt;, then make a snapshot and transfer it to your buyer’s DigitalOcean account. Easy.&lt;/p&gt;

&lt;p&gt;Write a cheat sheet on how to run the project. Describe the procedure to deploy, restart, and how to troubleshoot common problems. List all the credentials needed. List all external dependencies.&lt;/p&gt;

&lt;p&gt;Transfer the domain, and that’s it, you’re done.&lt;/p&gt;

&lt;p&gt;If your buyer is concerned about non-compete legal stuff, you can both sign an Assignment and Transfer Agreement via &lt;a href=&quot;https://www.docracy.com/&quot;&gt;Docracy&lt;/a&gt;. It’s a valid document, and it only takes a few minutes.&lt;/p&gt;

&lt;h2 id=&quot;be-patient&quot;&gt;5. Be patient&lt;/h2&gt;

&lt;p&gt;Wait it out, and take it easy. Don’t lower your price every week.&lt;/p&gt;

&lt;h2 id=&quot;my-lesson&quot;&gt;My lesson&lt;/h2&gt;

&lt;p&gt;There’s a market for even the simplest of things, if you know how to present their value well. I’m giving myself a nice pat on the back for rediscovering the basics of commerce, but if I managed to sell my Sitestalker, and if my friend sold a bot that tweets your crush on Valentines, then what’s stopping you from exchanging your thing that’s just idling there for free beer?&lt;/p&gt;</content><category term="posts" /><summary>All I did was put together a trivial web app to scratch my own itch, and it keeps scratching it, while I drink my free beer.</summary></entry><entry><title>How to reset Ember applications</title><link href="/posts/how-to-reset-ember-applications/" rel="alternate" type="text/html" title="How to reset Ember applications" /><published>2016-06-12T00:00:00+02:00</published><updated>2016-06-12T00:00:00+02:00</updated><id>/posts/how-to-reset-ember-applications</id><content type="html" xml:base="/posts/how-to-reset-ember-applications/">&lt;p&gt;Usually when the user logs out of your Ember application, we want to clear the state, wipe out every trace of user activity, and unload the store in order to reach a blank state and make the application ready to start a fresh session.&lt;/p&gt;

&lt;p&gt;Most of the time we are (totally rightfully) tempted to find the one and only &lt;strong&gt;Ember way&lt;/strong&gt; for each possible action in our application. So, you go surfin’ in the Ember’s &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Application.html&quot;&gt;API docs&lt;/a&gt; and find the &lt;code class=&quot;highlighter-rouge&quot;&gt;Application#reset&lt;/code&gt; method. It says it re-creates the application’s container. Sounds good?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;No. Do not use it!&lt;/strong&gt; (except perhaps in tests).&lt;/p&gt;

&lt;p&gt;Why is that so?&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;reset&lt;/code&gt; method &lt;em&gt;can not&lt;/em&gt; ensure all possible states will be wiped out. Due to the nature of JavaScript, there’s a plethora of ways us programmers can pile up various state and values all over the place in a way where Ember’s container mechanism is not aware of it.&lt;/p&gt;

&lt;p&gt;Here’s one example. Ever found guilty of doing this?&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Ember&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Controller&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;extend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// don&#39;t do this&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;actions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;saveName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;name&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This piece of code puts the &lt;code class=&quot;highlighter-rouge&quot;&gt;name&lt;/code&gt; in the class prototype and &lt;code class=&quot;highlighter-rouge&quot;&gt;Application#reset&lt;/code&gt; will not be able to reset it. BTW, for obvious reasons, &lt;strong&gt;never&lt;/strong&gt; declare default object values in a way depicted in the upper example, but rather set them in the object’s &lt;code class=&quot;highlighter-rouge&quot;&gt;init()&lt;/code&gt; hook.&lt;/p&gt;

&lt;p&gt;What should we use then?&lt;/p&gt;

&lt;h3 id=&quot;the-good-ol-page-refresh&quot;&gt;The good ol’ page refresh.&lt;/h3&gt;

&lt;p&gt;To be 100% sure all memory is wiped away and the grounds are freshly prepared, just reload the page (usually in the session invalidation step). &lt;code class=&quot;highlighter-rouge&quot;&gt;window.location = &#39;/&#39;&lt;/code&gt; or something similar should do just fine. There’s no shame in doing it. Things are cached. Don’t worry.&lt;/p&gt;

&lt;p&gt;P.S. Are you fresh in Ember land and want to learn more tricks like these? Check out &lt;a href=&quot;http://emberjs-book.com/&quot;&gt;Front-end revolution with Ember.js&lt;/a&gt;!&lt;/p&gt;</content><category term="posts" /><summary>Usually when the user logs out of your Ember application, we want to clear the state, wipe out every trace of user activity, and unload the store in order to reach a blank state and make the application ready to start a fresh session.</summary></entry></feed>
